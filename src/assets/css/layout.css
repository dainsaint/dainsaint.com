:root {
  --gap: 1.25rem;
  --margin: 1.25rem;
  --measure: 800px;
}

/* STACK */

/* .25, .75, 1.25, 2.5, 5, (8?) 10 */

/* 1, 3, 5, 10, 20, (30), 40 */


.stack-dense > * + * {
  margin-block-start: .25rem;  /* 1/5 */
}

.stack-tight > * + * {
  margin-block-start: .75rem; /* 1/3 */
}

.stack > * + * {
  margin-block-start: 1.25rem; /* 1 */
}


.stack-loose > * + * {
  margin-block-start: 2.5rem; /* x2 */
}

.stack-sparse > * + * {
  margin-block-start: 7.5rem; /* x6 */
}

.stack-isolate {
  & + * {
    margin-block-start: 5rem; /* x4 */
  }

  * + & {
    margin-block-start: 5rem;
  }
}

[class*=stack] h3:not(.stack-isolate):not(.stack-default) + * {
  margin-block-start: .25rem;
}

/* GROUP */

.group {
  & > * + * {
    margin-block-start: .5rem;
  }

  & > h3 + * {
    margin-block-start: 0rem;
  }
}


/* CONSTRAIN */

[class~=constrain] > *, 
[class~=constrain-default]>*,
[class~=constrain-wide]>*,
[class~=constrain-full]>*
{
  --measure: 800px;
  max-inline-size: min(100% - 2 * var(--margin), var(--measure));
  margin-inline: max(calc(50% - 600px), var(--margin)) auto;  
}

[class~=content],
[class~=content-default],
[class~=content-wide],
[class~=content-full] {
  --measure: 800px;
  max-inline-size: min(100%, var(--measure));
  margin-inline: max(calc(50% - 600px), 0) auto;
}

.constrain-wide > * {
  --measure: 1200px;
}

.constrain-full > * {
  --measure: 100%;
}

.content-default {
  --measure: 800px;
}

.content-wide {
  --measure: 1200px;
}

.content-full {
  --measure: 100%;
}

.content-flush {
  --margin: 0rem;
}


/*

.constrain > * {
  --measure: 800px;
  max-inline-size: min(100% - 2 * var(--margin), var(--measure));
  margin-inline: auto;
}

.constrain-wide {
  --measure: 1200px;
  max-inline-size: min(100% - 2 * var(--margin), var(--measure));
  margin-inline: auto;
}

.constrain-full {
  --measure: 100%;
  max-inline-size: calc(100% - 2 * var(--margin));
  margin-inline: auto;
}

.flush {
  --margin: 0rem;
}
*/

/* BLOCK */


[class*=block] {
  display: flex;
  justify-content: center;
  flex-direction: column;
  padding: 1.25rem 0;

  & > * {
    width: 100%;
  }

}

.block-loose {
  padding: 10rem 0;
}

.block-smart:not(:has(.hero)) {
  justify-content: space-between;  
  min-height: calc(100vh);
  padding: 0;

  & > * {
    min-height: auto;
    flex-basis: 999;
  }

  &::before, &::after {
    content: '';
    display: block;
    width: 100%;
    min-height: 10rem;
  }

}

main > .block-smart:first-of-type {
  min-height: calc(100vh - 108px);
    
  &::before {
    min-height: 1.25rem;
    max-height: 10rem;
    flex: 1 1 1.25rem;
  }
}

.block-smart:has(.hero) {
  padding-bottom: 10rem;
}

[class*=block]:has( > .hero:first-child ) {
  padding-block-start: 0;
}


.block-lede {
  padding-block-start: 1.25rem;
  padding-block-end: 10rem;
}

.block-smart, .block-lede, .block-loose {
  .stack-isolate:last-child{
    margin-block-end: -5rem;
  }
}

/* SWITCH */
.switch {
  --threshold: 30rem;
  display: flex;
  flex-wrap: wrap;
  --switch-gap: clamp(var(--gap), calc((var(--threshold) - 100%) * 1000), 5 * var(--gap));
  gap: var(--gap);
}

.switch > * {
  --columns: 1;
  flex-grow: var(--columns);
  flex-basis: calc((var(--threshold) - 100%) * 999);
}



/* GRID */
[class*=grid] {
  --grid-column-count: 100;
  --grid-gap-count: calc(var(--grid-column-count) - 1);
  --grid-total-gap-width: calc(var(--grid-gap-count) * var(--gap));
  --grid-max-width: calc((100% - var(--grid-total-gap-width)) / var(--grid-column-count));
  --grid-min-width: 0px;
  --grid-basis: clamp( min(var(--grid-min-width), 100%), 100%, var(--grid-max-width) );
  
  display: grid;
  gap: var(--gap);
  grid-template-columns: repeat(auto-fit, minmax(var(--grid-basis), 1fr));
  grid-auto-flow: dense;

  & > * {
    --columns: 1;
    --rows: 1;
    grid-column: span var(--columns);
    grid-row: span var(--rows);
  }
} 

/* GRIDS BY COLUMNS */

.grid-two {
  --grid-column-count: 2;
}

.grid-three {
  --grid-column-count: 3;
}

.grid-four {
  --grid-column-count: 4;
}

.grid-five {
  --grid-column-count: 5;
}

.grid-six {
  --grid-column-count: 6;
}

/* GRIDS BY SIZE */

.grid-tiny {
  --grid-min-width: 5rem;
}

.grid-small {
  --grid-min-width: 10rem;
}

.grid-medium {
  --grid-min-width: 15rem;
}

.grid-large {
  --grid-min-width: 20rem;
}

.grid-huge {
  --grid-min-width: 40rem;
}


/* GRID ASPECT */


.grid-uniform {

  & > * {
    aspect-ratio: var(--columns) / var(--rows);
    width: 100%;
    height: 100%;
    display: block;
    box-sizing: border-box;
    object-position: center center;
    object-fit: cover;
  }
}

/* GAP SIZING */
.gap-flush {
  --gap: 0rem;
}

.gap-dense {
  --gap: .25rem;
}

.gap-tight {
  --gap: .75rem;
}

.gap-loose {
  --gap: 2.5rem;
}

.gap-sparse {
  --gap: 7.5rem;
}



/* GRID CELL OVERRIDES */


.columns-two {
  --columns: 2;
}

.columns-three {
  --columns: 3;
}

.columns-four {
  --columns: 4;
}

.columns-five {
  --columns: 5;
}

.columns-six {
  --columns: 6;
}


.rows-two {
  --rows: 2;
}

.rows-three {
  --rows: 3;
}

.rows-four {
  --rows: 4;
}

.rows-five {
  --rows: 5;
}

.rows-six {
  --rows: 6;
}


/* BRICKS */
[class~=bricks],
[class~=bricks-tiny],
[class~=bricks-small],
[class~=bricks-large] {
  display: flex;
  flex-wrap: wrap;
  align-items: start;
  gap: var(--gap);

  & > * {
    flex: 1 1 auto;
    inline-size: auto;
    max-block-size: 10rem;
    object-fit: cover;
    /* padding: .625rem; */
  }
}

.bricks-large > * {
  max-block-size: 20rem;
}

.bricks-small > * {
  max-block-size: 5rem;
}

.bricks-tiny > * {
  max-block-size: 2rem;
}

.brick-contain {
  object-fit: contain;
}

.fit-contain > * {
  object-fit: contain;
}

.fit-cover > * {
  object-fit: cover;
}

/* FLEX */

.flex {
  display: flex;
  gap: var(--gap);
}





.tiles {
  grid-template-columns: 1fr;
  grid-auto-rows: auto;
  display: grid;
  grid-auto-flow: dense;
  gap: var(--gap);
}

.tiles > * {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

@media (min-width: 700px) {
  .tiles {
    grid-template-columns: repeat(6, minmax(100px, 1fr));
    grid-auto-rows: calc(min(100vw, 1200px) / 6);
  }

  .tiles>* {
    grid-column: span var(--columns);
    grid-row: span var(--rows);
  }
}




/* ALIGN */

.align-center {
  text-align: center;
  justify-content: center;
}

.align-left {
  text-align: left;
  justify-content: start;
}

.align-right {
  text-align: right;
  justify-content: end;
}

.align-top {
  object-position: top center;
}






/* COLUMNS (TEXT) */


.columns {
  columns: 2 325px;
}




/* ?????? */

.pull {
  margin-block-end: -1.25rem;
}

.pull-dense {
  margin-block-end: -.25rem;
}

.pull-tight {
  margin-block-end: -.75rem;
}

.pull-loose {
  margin-block-end: -2.5rem;
}

.pull-sparse {
  margin-block-end: -7.5rem;
}




.push + *{
  margin-block-start: 1.25rem;
}

.push-dense + *{
  margin-block-start: .25rem;
}

.push-tight + * {
  margin-block-start: .75rem;
}

.push-loose + * {
  margin-block-start: 2.5rem;
}

.push-sparse + * {
  margin-block-start: 7.5rem;
}




.list-inline {
  ul,
  li {
    display: inline-block;
  }
}

.inline > * {
  display: inline-block;
}

ul.inline {
  padding: inherit;
}


.distribute > * + *{
  margin-inline-start: 0.5rem;
  &::before {
    margin-inline-end: 0.5rem;
  }
}

.distribute-dense > * + * {
  margin-inline-start: 0.25rem;
  &::before {
    margin-inline-end: 0.25rem;
  }
}

.distribute-loose > * + * {
  margin-inline-start: 1rem;
  &::before {
    margin-inline-end: 1rem;
  }
}


.between-interpunct {
  & > * + *::before {
    content: ' â€¢ ';
    display: inline-block;
  }
}

.between-pipe {
  & > * + *::before {
    content: ' | ';
    display: inline-block;
  }
}

.between-divider {
  & > * + *::before {
    content: '';
    display: block;
    inline-size: 100%;
    border-block-start: 1px solid var(--color);
    margin-block-start: inherit;
  }
}

.size-full {
  width: 100%;
}




.table {
  padding: 0;
  li {
    display: block;
    position: relative;
    border-bottom: 1px solid var(--color);
    
    &::before {
      content: '';
      display: block;
      position: absolute;
      left: 0px;
      right: 0px;
      bottom: 0px;
      height: 0%;
      background: var(--color);
      transition: height .1s ease;
      pointer-events: none;
    }
  }

  li:hover {
    
    
    &::before {
      height: 100%;
    }
  }

  li a {
    display: grid;
    grid-template-columns: .25fr .5fr 1fr;
    position: relative;
    text-decoration: none;
    z-index: 1;
    align-items: center;

    &:hover {
      color: var(--primary);
    }
    

    > * {
      padding: .25rem;
    }

    time {
      background: transparent;
      white-space: normal;
      color: currentColor;
    }

  }
}

.list-plain {
  padding: 0;

  li {
    display: block;
  }
}

.list-calendar {
  
}


.text-rhythm {
  max-width: 20rem;
}

.all-rounded > * {
  border-radius: .5rem;
}